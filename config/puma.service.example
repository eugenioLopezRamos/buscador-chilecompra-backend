## This file can't use ruby/rails env vars
## Those are included for demonstration purposes only.

## This allows you to boot puma automatically 
## as a daemon in case the server restarts/crashes/etc

## This file should be located in /etc/systemd/system/

[Unit]
Description=Puma HTTP Server
After=network.target

# Uncomment for socket activation (see below)
#Requires=puma.socket

[Service]
# Foreground process (do not use --daemon in ExecStart or config.rb)
#Type=simple

# Preferably configure a non-privileged user
User=ENV['CHILECOMPRA_RAILS_DEPLOY_USER']

# Specify the path to your puma application root
#WorkingDirectory=$APP_DIRECTORY_ON_SERVER

# Helpful for debugging socket activation, etc.
#Environment=PUMA_DEBUG=1

# The command to start Puma
# Here we are using a binstub generated via:
# `bundle binstubs puma --path ./sbin`
# in the WorkingDirectory (replace <WD> below)
# You can alternatively use `bundle exec --keep-file-descriptors puma`
#ExecStart=<WD>/sbin/puma -b tcp://0.0.0.0:9292 -b ssl://0.0.0.0:9293?key=key.pem&cert=cert.pem

# Alternatively with a config file (in WorkingDirectory) and
# comparable `bind` directives
Environment=secret_key_base=ENV['SECRET_KEY_BASE']
ExecStart=$ROUTE_TO_PUMA_RVM_WRAPPER -C $ROUTE_TO_PUMA_CONFIG_ON_REPO


Restart=always

[Install]
WantedBy=multi-user.target